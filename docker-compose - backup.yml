services:
  # Gebruik pre-built Node image voor snelle start
  frontend:
    image: node:18-alpine
    container_name: conversationhub_frontend_dev
    working_dir: /app
    ports:
      - "3000:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm config set registry https://registry.npmjs.org/ && npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    networks:
      - conversationhub

  # Laravel Backend (unchanged)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: conversationhub_backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/storage/app:/var/www/storage/app
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=database
      - DB_DATABASE=conversationhub
      - DB_USERNAME=postgres
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
    depends_on:
      - database
      - redis
    networks:
      - conversationhub

  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: conversationhub_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: conversationhub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - conversationhub

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: conversationhub_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - conversationhub

volumes:
  postgres_data:
  redis_data:
  frontend_node_modules:

networks:
  conversationhub:
    driver: bridge